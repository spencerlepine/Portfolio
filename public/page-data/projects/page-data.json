{"componentChunkName":"component---src-pages-projects-js","path":"/projects/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2021-10-20","title":"HelloHealth","tech":["React","MaterialUI","PostgreSQL","Jest","Node.js","Express","Firebase"],"github":"https://github.com/Blue-Ocean-Team-1/HelloHealth","external":"https://gallant-torvalds-547222.netlify.app/","company":"","slug":"/projects/hellohealth"},"html":"<h2>Overview</h2>\n<p>This was a group project with a group of 8 engineers, each working on modules across the client, server, and database. Given a client prompt, the team chose a technology stack and had seven days to build the minimum viable product.</p>\n<h2>Description</h2>\n<p>Through the service, local farms can list their products for sale and consumers can easily navigate and purchase their products. HelloHealth offers a subscription based plan and the sale of individual products. The service was made to provide farms an outlet to directly be the vendors of their products. Consumers are more connected to the food they eat and in return are more connected to the farms that provide for them.</p>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Collaborated with 8 engineers to build a minimum viable product in one week meeting client expectations.</li>\n<li>Integrated Firebase Authentication connected to Context hooks managing conditional page renders</li>\n<li>Set up continuous integration using pre-commit hooks, enforcing code styles, running GitHub Actions, and automated deployment to Netlify</li>\n<li>Designed detailed wireframes as the UI owner to match business requirements and user stories</li>\n<li>Practiced test-driven development with React Testing Library and supertest for unit testing</li>\n<li>Developed backend API endpoints linking to the PostgreSQL with the Sequelize ORM.</li>\n</ul>\n<h2>Engineering Journal:</h2>\n<p>I maintained a breif engineering journal for this projects, find it here on <a href=\"https://docs.google.com/document/d/1V629qfaWTz82iCCIzR79HN17oolk1Q6brsBBwApAPXk/edit?usp=sharing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Docs</a>.</p>\n<h2>Business Requirements:</h2>\n<p>The team worked together to identify all users stories in the <a href=\"https://github.com/Blue-Ocean-Team-1/HelloHealth/blob/main/resources/Client%20Proposal-V1.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">client proposal document</a>. We had several  meetings with a mock client to discuss progress and feature requirements.</p>\n<h2>Database Schema:</h2>\n<p>For this project, there was collaboration for the database schema which the API would reflect, see the SQL layout <a href=\"https://github.com/Blue-Ocean-Team-1/HelloHealth/tree/main/resources/Schemas%20-%20DB\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a>.</p>\n<h2>Wireframes:</h2>\n<p>As the UI Owner, I designed the <a href=\"https://github.com/Blue-Ocean-Team-1/HelloHealth/tree/main/resources/wireframe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wireframes</a> of the layout of the site for the team to follow.</p>\n<h2>API Documentation:</h2>\n<p>The team built an API for the client/server interaction between the database, see the schema <a href=\"https://github.com/Blue-Ocean-Team-1/HelloHealth/blob/main/BLUE_OCEAN_API.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a>.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://aws.amazon.com/ec2/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS (EC2)</a></li>\n<li><a href=\"https://vitejs.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vite</a></li>\n<li><a href=\"https://testing-library.com/docs/react-testing-library/intro/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Testing Library</a></li>\n<li><a href=\"https://www.npmjs.com/package/supertest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Supertest</a></li>\n<li><a href=\"https://sequelize.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sequelize</a></li>\n<li><a href=\"https://github.com/features/actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Actions</a></li>\n<li><a href=\"https://coveralls.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Coveralls</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a></li>\n<li><a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Husky</a></li>\n<li><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a></li>\n</ul>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/theycallmejeff\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jeff Liu</a></li>\n<li><a href=\"https://github.com/nicholaswma\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nicholas Ma</a></li>\n<li><a href=\"https://github.com/cassbarragan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cassandra Barragan</a></li>\n<li><a href=\"https://github.com/DrewHang\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Andrew Hang</a></li>\n<li><a href=\"https://github.com/bcaliva21\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bradley Caliva</a></li>\n<li><a href=\"https://github.com/lawsun03\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lawrence Sun</a></li>\n<li><a href=\"https://github.com/WalterT-MK\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Walter Tang</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spencer Lepine</a></li>\n</ul>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-10-20","title":"Atelier Products","tech":["Node.js","Express","PostgresSQL","AWS EC2","NGINX","Docker"],"github":"https://github.com/sdc-bareminimum/project-catwalk-related-service","external":"","company":"","slug":"/projects/atelier-products"},"html":"<h2>Overview</h2>\n<p>This was a solo, week long <strong>system design</strong> project to serve 20 million retail product records. The goal was to design the robust database and API matching an expected <a href=\"https://github.com/sdc-bareminimum/project-catwalk-related-service/blob/main/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">schema</a>. Preformance expectactions were 100 request per second throughput, with sub 2000 ms latency, and a less than 1% error rate.</p>\n<h2>Description</h2>\n<p>The Hack Reactor System Design Capstone Project. The goal was to replace the existing API (for Project Catwalk) with a backend system that can support the full (retail product) data set for the project and can scale to meet the demands of production level traffic.</p>\n<p>This projects consists of a Nginx load balancer, a Node/Express server, and a PostgreSQL database. All three are built/run in docker containers and deployed to AWS EC2 instances. This API endpoint has been optimized to handle product level traffic, verified by load testing.</p>\n<h2>Preformance End Results:</h2>\n<ul>\n<li>Throughput: ~400 RPS (Max 5000RPS)</li>\n<li>Latency: ~70ms</li>\n<li>Error rate: &#x3C;1% rate</li>\n</ul>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Built a multi-layer backend system with initial capacity of 100 rps then optimized to handle 5000 rps, maintaining 70ms latency with a &#x3C;1% error rate</li>\n<li>Increased fault tolerance and system availability for users by horizontally scaling proxy and service layers with NGINX load balancers using a dynamic least connection algorithm.</li>\n<li>Decreased stress testing cycle length by identifying and revising system bottlenecks using Loader.io and K6</li>\n<li>Simplified deployment process with Docker images to create Node.js server instances on AWS EC2</li>\n<li>Implemented continuous integration with GitHub Actions running unit and integration tests with Jest.</li>\n</ul>\n<h2>Engineering Journal:</h2>\n<p>To keep track of everything I learned, along with the challenges faced during this project, I maintained an Engineering Journal available as a <a href=\"https://github.com/sdc-bareminimum/project-catwalk-related-service/blob/main/resources/system_design_project_engineering_journal.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PDF</a>, <a href=\"https://github.com/sdc-bareminimum/project-catwalk-related-service/blob/main/resources/JOURNAL.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Markdown</a>, or <a href=\"https://docs.google.com/document/d/1pTTeDCzcKNozd9dljexVn-PrXwzoTBS0hby2dOZ95yw\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Docs</a></p>\n<h2>API Documentation:</h2>\n<p>This project was dedicated to rebuilding the Products module of the <a href=\"https://gist.github.com/trentgoing/d69849d6c16b82d279ffc4ecd127f49f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Atelier API</a>.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://sequelize.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sequelize</a></li>\n<li><a href=\"https://www.npmjs.com/package/axios\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Axios</a></li>\n<li><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a></li>\n<li><a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Husky</a></li>\n<li><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a></li>\n</ul>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-10-14","title":"GroceryChecc","tech":["React","React-Bootstrap","Mongo","Node.js","Express"],"github":"https://github.com/spencerlepine/hr-sea19-mvp","external":"https://grocery-checc.herokuapp.com/","company":"","slug":"/projects/grocerychecc"},"html":"<h2>Overview</h2>\n<p>The goal of this solo project was building a full-stack application in two days. The biggest challenge of this was managing time and balancing trade-offs between functionality and presentability.</p>\n<h2>Description</h2>\n<p>GroceryChecc simplifies brainstorming a shopping list by helping find relevant grocery products and replacement items for you. Helping busy parents save time by generating a complete grocery shopping list from the couch.</p>\n<p>The straight-forward interface provides a clean user experience to emphasize critical features. This app helps prioritize essential food products to give a solid foundation of a shopping list.</p>\n<p>Automating this process saves time and money. With a dynamic list stored for each user, it is easy to review a birds-eye list of all groceries at once.</p>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Connected MongoDB storing grocery lists private to each user</li>\n<li>Implemented Firebase Authentication tracking user accounts to store saved lists</li>\n<li>Built the backend API to fetch and serialize data from the Sequelize API and the OpenFoodFacts API</li>\n<li>Used a straight-forward client interface assisted by React-Bootstrap to simplify site navigation</li>\n</ul>\n<h2>Wireframes:</h2>\n<p>Everything was designed to match this <a href=\"https://github.com/spencerlepine/hr-sea19-mvp/blob/main/resources/wireframe.png\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wireframe</a>, which was created in Figma.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://wiki.openfoodfacts.org/API/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenFoodFacts API</a></li>\n<li><a href=\"https://spoonacular.com/food-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spoonacular API</a></li>\n<li><a href=\"https://sequelize.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sequelize</a></li>\n</ul>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-10-14","title":"Atelier","tech":["React","React-Bootstrap","Webpack","Jest","Testing Library"],"github":"https://github.com/fec-bareminimum/project-catwalk","external":"https://project-atelier.herokuapp.com/","company":"","slug":"/projects/atelier"},"html":"<h2>Overview</h2>\n<p>This was a group project with a group of 4 engineers, each working on one the of the four modules over a span two weeks. Given a wireframe, the goal was to implement all user stories specified in the business requirements document (not sharing, IP of Hack Reactor).</p>\n<h2>Description</h2>\n<p>This frontend project is built to serve product records from an exisiting API.</p>\n<p>This project was broken down into four modules: Products Overview, Related/Outfit, Question/Answers, and Rating/Reviews. This frontend client is accessible and optimized for browsing product data.</p>\n<p>The group also built a minimal Node.js / Express app to serve static files, as well as forwarding requests to an external (pre-built) products API.</p>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Architectured the React frontend service of photo carousel and pop-up modal serving data from external RESTful API backend</li>\n<li>Encapsulated business required click tracking logic in React higher order components to allow consistent tracking of user interactions across the entire application</li>\n<li>Practiced test-driven development for component functionality and page renders with Jest and Testing Library, along with CircleCI</li>\n<li>Improved page load time using dynamic and static compression along with resized images</li>\n</ul>\n<h2>Wireframes:</h2>\n<p>Everything was designed to match this <a href=\"https://xd.adobe.com/view/e600dc0f-454c-44e3-5075-7872d04189ff-9031/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wireframe</a>, which was provided and not created by the team.</p>\n<h2>Engineering Journal:</h2>\n<p>To keep track of everything I learned, along with the challenges faced during this project, I maintained an Engineering Journal available on <a href=\"https://github.com/fec-bareminimum/project-catwalk/blob/main/resources/journals/SPENCER_JOURNAL.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a> or <a href=\"https://gist.github.com/spencerlepine/964affee95497d2009f96c0f778a3a41\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gist</a></p>\n<h2>API Documentation:</h2>\n<p>This project was for an external API with existing data, see the documentation <a href=\"https://gist.github.com/trentgoing/d69849d6c16b82d279ffc4ecd127f49f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a>.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://developers.google.com/web/tools/lighthouse\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Lighthouse</a></li>\n<li><a href=\"https://styled-components.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Styled Components</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a></li>\n<li><a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Husky</a></li>\n<li><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a></li>\n</ul>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/andy-ch3n\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Andy Chen</a> (<a href=\"https://www.linkedin.com/in/andych3n/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/ggbbi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gabrielle Guo</a> (<a href=\"https://www.linkedin.com/in/ggbbi/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/lawsun03\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lawrence Sun</a> (<a href=\"https://www.linkedin.com/in/lsun0/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spencer Lepine</a> (<a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n</ul>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-09-19","title":"Quickcart","tech":["React","Firebase","Spoonacular","Testing Library"],"github":"https://github.com/spencerlepine/quickcart","external":"https://grocery-client-sl.herokuapp.com/","company":"","slug":"/projects/quickcart"},"html":"<p>Make a shopping list with personal grocery data to help budget. Inspired by <a href=\"https://www.instacart.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Instacart</a>.</p>\n<h2>Overview</h2>\n<p>This is a solo project that was developed over the course of several months. The goal was to apply front end skills and get familiar with managing a more complex application.</p>\n<h2>Description</h2>\n<p>I built this website for myself to help assist and track grocery shopping lists. It all started from using a spreadsheet with products prices to budget. I needed some way to avoid manually entering product records and customize images, prices, and preferences.</p>\n<p>Early on, this was a full-stack project with a <a href=\"https://www.mongodb.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mongo</a> and <a href=\"https://expressjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Express</a> server. This was an iteration to the original spreadsheet, providing a simpler interface for managing a grocery list than Google Sheets. The MERN app had basic CRUD operations, but only stored data in the cloud for one user.</p>\n<p>While working through a React course on <a href=\"https://scrimba.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scrimba</a>, I applied my new-found knowledge to upgrade QuickCart. I migrated to <a href=\"https://firebase.google.com/docs/firestore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firebase Firestore</a> and implemented proper authentication for individual users.</p>\n<p>From there, I continued expanded the database with product data, cart history, and individual user account details. I added many features to the client to save time when grocery shopping, including a bar-code scan to onboard products and a search bar.</p>\n<p>I started working with the <a href=\"https://wiki.openfoodfacts.org/API\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenFoodFacts API</a> and the <a href=\"https://spoonacular.com/food-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spoonacular API</a> to save even MORE grocery products. These also provided nutrition data to be displayed for each product.</p>\n<p>One issue I ran into was trying to automatically save estimate prices. No services actually track this varying data, it was overkill to start scraping sites for this.</p>\n<p>I learned many development skills during this project, and also had many failures. I learned React, React Router, React Context, MongoDB, Express, Firebase Authentication, Firebase Firestore, MaterialUI, Jest and React Testing Library, using a linter, git workflow, and deploying to Heroku.</p>\n<h2>🌟 Features:</h2>\n<ul>\n<li>Browse grocery products records served from the Firestore database</li>\n<li>Save products to your cart, always persisted in the cloud.</li>\n<li>Analyze the cart to identify empty categories</li>\n<li>Customized product records and create a personal list</li>\n<li>Create an account to access your list anywhere</li>\n<li>Scan a bar code to upload a product pulled from Spoonacular or OpenFoodFacts</li>\n<li>View a history of transaction receipts previous from shopping lists</li>\n<li>Save product images with a convient image searching pop-up connected to Google CSE</li>\n</ul>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Designed a Firebase Cloud Firestore NoSQL database managing user records, grocery product catalogs, and cart purchase histories</li>\n<li>Organized state management for products, account information, and carts with Context hooks also persisted in the database.</li>\n<li>Integrated Firebase Authentication to assist storing user unique shopping lists, along with customized product records.</li>\n<li>Created a clean and modern user experience with Material UI following a wireframe and site-wide color theme.</li>\n<li>Implemented barcode scanning and external records from the OpenFoodFacts API to onboard new products</li>\n<li>Deployed static client (React) build files to Heroku.</li>\n</ul>\n<h2>Wireframes:</h2>\n<p>I planned out the UI in Figma for this project, checkout <a href=\"https://github.com/spencerlepine/quickcart/tree/master/whitepaper\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the wireframes here</a>.</p>\n<h2>Challenges:</h2>\n<h4>Authentication</h4>\n<p>Since the goal of this project was to have grocery lists accessible on any device, I planned to deploy it. This was my first experience with Authentication, and I wasn't sure how to approach it.</p>\n<p>With the client/server MERN stack, I began with sending a user/password to the server. I quickly realized this flaw, which led me to Firebase.</p>\n<p>Instead of investing in the backend and database, I decided to focus on the client side. This transition allowed me only develop the UI/UX and user stories to improve the actual product.</p>\n<h4>The Database</h4>\n<p>In the beginning, I started with a simple MongoDB database writing CRUD operations with an Express server. I also had a <code class=\"language-text\">.csv</code> file with grocery product data, and I needed a way to import/export it all. I was able to integrate a CSV file download and upload feature in the client. However, this was not a great solution if I were to use this app on my phone as well.</p>\n<p>The other problem was everything was stored a single user. After integrating Firebase for authentication, I decided to scrap the MERN stack and migrate to Firebase Firestore.</p>\n<p>I found Firestore to be very intuitive and continued expanding the database. Overall, it was helped me understand the importance of following a database design and schema just like crafting code.</p>\n<h4>State Management</h4>\n<p>As more features were added, the code base became more complex. Eventually, I was managing many Context hooks, API helper functions, and components.</p>\n<p>This forced me to carefully design components and organize data passed down through props. At one point, I did a complete overhaul of the codebase to clean up the project.</p>\n<p>As a result, it was a great lesson for writing better front end code.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a></li>\n<li><a href=\"https://testing-library.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Testing Libary</a></li>\n<li><a href=\"https://world.openfoodfacts.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenFoodFacts</a></li>\n<li><a href=\"https://cse.google.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google CSE</a></li>\n<li><a href=\"https://spoonacular.com/food-api/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spoonacular</a></li>\n</ul>\n<hr>\n<p>🏠 <a href=\"https://www.spencerlepine.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">spencerlepine.com</a>  ·  😺 GitHub <a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a>  ·  🐦 Twitter <a href=\"http://twitter.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a></p>"}},{"node":{"frontmatter":{"date":"2021-08-28","title":"Portfolio Site","tech":["React","GatsbyJS","GraphQL","Tailwindcss"],"github":"https://github.com/spencerlepine/portfolio-site","external":"https://spencerlepine.com","company":"","slug":"/projects/portfolio-site"},"html":"<p>A GatsbyJS site styled with TailwindCSS.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://tailwindcss.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TailwindCSS</a></li>\n<li><a href=\"https://www.digitalocean.com/products/droplets/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Digital Ocean Droplet</a></li>\n<li><a href=\"https://github.com/features/actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Actions</a></li>\n<li><a href=\"https://typicode.github.io/husky/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Husky</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a></li>\n<li><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a></li>\n</ul>\n<h2>Features</h2>\n<h3>Pre-commit hooks</h3>\n<ul>\n<li>Uses <code class=\"language-text\">Husky</code>, <code class=\"language-text\">ESLint</code>, and <code class=\"language-text\">Prettier</code> to enforce code styles and ensure Gatsby will build before pushing to remote.</li>\n</ul>\n<h3>Static Files</h3>\n<ul>\n<li><code class=\"language-text\">GatsbyJS</code> will dynamically build static files from files in the <a href=\"./content\">`/content</a> folder, including blog posts and projects.</li>\n</ul>\n<h3>Continuous Integration</h3>\n<ul>\n<li>\n<p>GitHub Actions will ensure a valid Gatsby build on the <code class=\"language-text\">master</code> branch</p>\n</li>\n<li>\n<p>Pushes to <code class=\"language-text\">master</code> will trigger automatic deployment to the <a href=\"https://www.digitalocean.com/products/droplets/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Digital Ocean Droplet</a>. GitHub Actions with SSH into the remote server and replace static files.</p>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p><a href=\"https://www.spencerlepine.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">spencerlepine.com</a>  ·  GitHub <a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a>  ·  Twitter <a href=\"http://twitter.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a></p>\n</blockquote>"}},{"node":{"frontmatter":{"date":"2021-08-16","title":"README Crawler","tech":["Node.js","jsdom","node-fetch"],"github":"https://github.com/spencerlepine/readme-crawler","external":"https://www.npmjs.com/package/readme-crawler","company":"","slug":"/projects/readme-crawler"},"html":"<p>Want to no more? Check out the source code <a href=\"https://github.com/spencerlepine/readme-crawler\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a></p>"}},{"node":{"frontmatter":{"date":"2021-07-22","title":"ManyShiba Bot","tech":["Shibe.online API","Node.js","Twitter API"],"github":"https://github.com/spencerlepine/manyshiba-bot","external":"https://twitter.com/manyshiba","company":"","slug":"/projects/manyshiba-bot"},"html":"<p><a href=\"https://twitter.com/manyshiba\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@ManyShibu</a> Twitter bot posting random (sacred) Shiba Inu pictures.</p>\n<h2>🛠️ Built with:</h2>\n<ul>\n<li><a href=\"https://shibe.online/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Shibe.online API</a></li>\n<li><a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a></li>\n<li><a href=\"https://www.npmjs.com/package/twit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">twit</a></li>\n</ul>\n<h2>Decription</h2>\n<p>This hobby project is a simple Twitter account posting daily dog pictures. Deployed on Heroku with scheduled CRON jobs.</p>\n<h2>Why Build This?</h2>\n<p>I love dogs. If you are interested in the development of this project, check out my <a href=\"/blog/manyshiba-the-worlds-greatest-twitter-bot\">blog post</a>.</p>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-04-04","title":"Spotify Top Songs","tech":["React","Spotify Web API"],"github":"https://github.com/spencerlepine/spotify-top-songs","external":"https://master.dj6fzfb5de88f.amplifyapp.com/","company":"","slug":"/projects/spotify-top-songs"},"html":"<p>Want to no more? Check out the source code <a href=\"https://github.com/spencerlepine/spotify-top-songs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a></p>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","325176663","604461682","921617919"]}