{"componentChunkName":"component---src-pages-projects-js","path":"/projects/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2021-10-14","title":"Atelier","tech":["React","React-Bootstrap","Webpack","Jest","Testing Library","Google Lighthouse"],"github":"https://github.com/fec-bareminimum/project-catwalk","external":"https://project-atelier.herokuapp.com/","company":"","slug":"/projects/atelier"},"html":"<h2>Overview</h2>\n<p>This was a group project with a group of 4 engineers, each working on one the of the four modules over a span two weeks. Given a wireframe, the goal was to implement all user stories specified in the business requirements document (not sharing, IP of Hack Reactor).</p>\n<h2>Description</h2>\n<p>This frontend project is built to serve product records from an exisiting API.</p>\n<p>This project was broken down into four modules: Products Overview, Related/Outfit, Question/Answers, and Rating/Reviews. This frontend client is accessible and optimized for browsing product data.</p>\n<p>The group also built a minimal Node.js / Express app to serve static files, as well as forwarding requests to an external (pre-built) products API.</p>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Architectured the React frontend service of photo carousel and pop-up modal serving data from external RESTful API backend</li>\n<li>Encapsulated business required click tracking logic in React higher order components to allow consistent tracking of user interactions across the entire application</li>\n<li>Practiced test-driven development for component functionality and page renders with Jest and Testing Library, along with CircleCI</li>\n<li>Improved page load time using dynamic and static compression along with resized images</li>\n</ul>\n<h2>Wireframes:</h2>\n<p>Everything was designed to match this <a href=\"https://xd.adobe.com/view/e600dc0f-454c-44e3-5075-7872d04189ff-9031/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wireframe</a>, which was provided and not created by the team.</p>\n<h2>Engineering Journal:</h2>\n<p>To keep track of everything I learned, along with the challenges faced during this project, I maintained an Engineering Journal available on <a href=\"https://github.com/fec-bareminimum/project-catwalk/blob/main/resources/journals/SPENCER_JOURNAL.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub</a> or <a href=\"https://gist.github.com/spencerlepine/964affee95497d2009f96c0f778a3a41\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gist</a></p>\n<h2>API Documentation:</h2>\n<p>This project was for an external API with existing data, see the documentation <a href=\"https://gist.github.com/trentgoing/d69849d6c16b82d279ffc4ecd127f49f\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">on GitHub</a>.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://styled-components.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Styled Components</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a></li>\n<li><a href=\"https://www.npmjs.com/package/husky\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Husky</a></li>\n<li><a href=\"https://prettier.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prettier</a></li>\n</ul>\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/andy-ch3n\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Andy Chen</a> (<a href=\"https://www.linkedin.com/in/andych3n/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/ggbbi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gabrielle Guo</a> (<a href=\"https://www.linkedin.com/in/ggbbi/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/lawsun03\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lawrence Sun</a> (<a href=\"https://www.linkedin.com/in/lsun0/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spencer Lepine</a> (<a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a>)</li>\n</ul>\n<hr>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter (@spencerlepine)</a></li>\n<li><a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub (@spencerlepine)</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n</ul>"}},{"node":{"frontmatter":{"date":"2021-09-19","title":"Quickcart","tech":["React","Firebase","Spoonacular","Testing Library"],"github":"https://github.com/spencerlepine/quickcart","external":"https://grocery-client-sl.herokuapp.com/","company":"","slug":"/projects/quickcart"},"html":"<p>Make a shopping list with personal grocery data to help budget. Inspired by <a href=\"https://www.instacart.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Instacart</a>.</p>\n<h2>Overview</h2>\n<p>This is a solo project that was developed over the course of several months. The goal was to apply front end skills and get familiar with managing a more complex application.</p>\n<h2>Description</h2>\n<p>I built this website for myself to help assist and track grocery shopping lists. It all started from using a spreadsheet with products prices to budget. I needed some way to avoid manually entering product records and customize images, prices, and preferences.</p>\n<p>Early on, this was a full-stack project with a <a href=\"https://www.mongodb.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mongo</a> and <a href=\"https://expressjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Express</a> server. This was an iteration to the original spreadsheet, providing a simpler interface for managing a grocery list than Google Sheets. The MERN app had basic CRUD operations, but only stored data in the cloud for one user.</p>\n<p>While working through a React course on <a href=\"https://scrimba.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scrimba</a>, I applied my new-found knowledge to upgrade QuickCart. I migrated to <a href=\"https://firebase.google.com/docs/firestore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Firebase Firestore</a> and implemented proper authentication for individual users.</p>\n<p>From there, I continued expanded the database with product data, cart history, and individual user account details. I added many features to the client to save time when grocery shopping, including a bar-code scan to onboard products and a search bar.</p>\n<p>I started working with the <a href=\"https://wiki.openfoodfacts.org/API\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenFoodFacts API</a> and the <a href=\"https://spoonacular.com/food-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spoonacular API</a> to save even MORE grocery products. These also provided nutrition data to be displayed for each product.</p>\n<p>One issue I ran into was trying to automatically save estimate prices. No services actually track this varying data, it was overkill to start scraping sites for this.</p>\n<p>I learned many development skills during this project, and also had many failures. I learned React, React Router, React Context, MongoDB, Express, Firebase Authentication, Firebase Firestore, MaterialUI, Jest and React Testing Library, using a linter, git workflow, and deploying to Heroku.</p>\n<h2>🌟 Features:</h2>\n<ul>\n<li>Browse grocery products records served from the Firestore database</li>\n<li>Save products to your cart, always persisted in the cloud.</li>\n<li>Analyze the cart to identify empty categories</li>\n<li>Customized product records and create a personal list</li>\n<li>Create an account to access your list anywhere</li>\n<li>Scan a bar code to upload a product pulled from Spoonacular or OpenFoodFacts</li>\n<li>View a history of transaction receipts previous from shopping lists</li>\n<li>Save product images with a convient image searching pop-up connected to Google CSE</li>\n</ul>\n<h2>Project Takeaways:</h2>\n<ul>\n<li>Designed a Firebase Cloud Firestore NoSQL database managing user records, grocery product catalogs, and cart purchase histories</li>\n<li>Organized state management for products, account information, and carts with Context hooks also persisted in the database.</li>\n<li>Integrated Firebase Authentication to assist storing user unique shopping lists, along with customized product records.</li>\n<li>Created a clean and modern user experience with Material UI following a wireframe and site-wide color theme.</li>\n<li>Implemented barcode scanning and external records from the OpenFoodFacts API to onboard new products</li>\n<li>Deployed static client (React) build files to Heroku.</li>\n</ul>\n<h2>Wireframes:</h2>\n<p>I planned out the UI in Figma for this project, checkout <a href=\"https://github.com/spencerlepine/quickcart/tree/master/whitepaper\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the wireframes here</a>.</p>\n<h2>Challenges:</h2>\n<h4>Authentication</h4>\n<p>Since the goal of this project was to have grocery lists accessible on any device, I planned to deploy it. This was my first experience with Authentication, and I wasn't sure how to approach it.</p>\n<p>With the client/server MERN stack, I began with sending a user/password to the server. I quickly realized this flaw, which led me to Firebase.</p>\n<p>Instead of investing in the backend and database, I decided to focus on the client side. This transition allowed me only develop the UI/UX and user stories to improve the actual product.</p>\n<h4>The Database</h4>\n<p>In the beginning, I started with a simple MongoDB database writing CRUD operations with an Express server. I also had a <code class=\"language-text\">.csv</code> file with grocery product data, and I needed a way to import/export it all. I was able to integrate a CSV file download and upload feature in the client. However, this was not a great solution if I were to use this app on my phone as well.</p>\n<p>The other problem was everything was stored a single user. After integrating Firebase for authentication, I decided to scrap the MERN stack and migrate to Firebase Firestore.</p>\n<p>I found Firestore to be very intuitive and continued expanding the database. Overall, it was helped me understand the importance of following a database design and schema just like crafting code.</p>\n<h4>State Management</h4>\n<p>As more features were added, the code base became more complex. Eventually, I was managing many Context hooks, API helper functions, and components.</p>\n<p>This forced me to carefully design components and organize data passed down through props. At one point, I did a complete overhaul of the codebase to clean up the project.</p>\n<p>As a result, it was a great lesson for writing better front end code.</p>\n<h2>📦 More Technologies:</h2>\n<ul>\n<li><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a></li>\n<li><a href=\"https://testing-library.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Testing Libary</a></li>\n<li><a href=\"https://world.openfoodfacts.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenFoodFacts</a></li>\n<li><a href=\"https://cse.google.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google CSE</a></li>\n<li><a href=\"https://spoonacular.com/food-api/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spoonacular</a></li>\n</ul>\n<hr>\n<p>🏠 <a href=\"https://www.spencerlepine.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">spencerlepine.com</a>  ·  😺 GitHub <a href=\"https://github.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a>  ·  🐦 Twitter <a href=\"http://twitter.com/spencerlepine\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@spencerlepine</a></p>"}},{"node":{"frontmatter":{"date":"2021-08-28","title":"Portfolio Site","tech":["React","GatsbyJS","GraphQL","Tailwindcss"],"github":"https://github.com/spencerlepine/portfolio-site","external":"https://spencerlepine.com","company":"","slug":"/projects/portfolio-site"},"html":""}},{"node":{"frontmatter":{"date":"2021-08-16","title":"README Crawler","tech":["Node.js","jsdom","node-fetch"],"github":"https://github.com/spencerlepine/readme-crawler","external":"https://www.npmjs.com/package/readme-crawler","company":"","slug":"/projects/readme-crawler"},"html":""}},{"node":{"frontmatter":{"date":"2021-07-22","title":"ManyShiba Bot","tech":["Shibe.online API","Node.js","Twitter API"],"github":"https://github.com/spencerlepine/manyshiba-bot","external":"https://twitter.com/manyshiba","company":"","slug":"/projects/manyshiba-bot"},"html":""}},{"node":{"frontmatter":{"date":"2021-04-04","title":"Spotify Top Songs","tech":["React","Spotify Web API"],"github":"https://github.com/spencerlepine/spotify-top-songs","external":"https://master.dj6fzfb5de88f.amplifyapp.com/","company":"","slug":"/projects/spotify-top-songs"},"html":""}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","325176663","604461682","921617919"]}