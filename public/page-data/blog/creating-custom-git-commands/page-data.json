{"componentChunkName":"component---src-templates-post-js","path":"/blog/creating-custom-git-commands","result":{"data":{"markdownRemark":{"html":"<p>Every time I clone a repository from GitHub, I always run the same set of commands. This is prone to typos and simply inconvenient. There is a simple solution of combining each step into a single command that automatically runs everything for us.</p>\n<p>In this example, I need to clone a GitHub repository, move into the new directory, and then open the project in VSCode.</p>\n<p>Instead of multiple commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">  git clone https://github.com/spencerlepine/readme-crawler\n  cd readme-crawler\n  code .</code></pre></div>\n<p>It would great to run one command:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">\tclone https://github.com/spencerlepine/readme-crawler</code></pre></div>\n<p>To achieve this, we can create a script in the <code class=\"language-text\">~/bin</code> directory. Make sure this path matches up with your configuration for the terminal (e.g. <code class=\"language-text\">PATH=$PATH:$HOME/bin</code>).</p>\n<p>Let’s create a custom script to combine the git commands.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">  #!/bin/bash\n\n  ((!$#)) &amp;&amp; echo missing git URL argument! &amp;&amp; exit 1\n\n  git clone $1\n  basename=$(basename $url)\n  reponame=${basename%.*}\n  Cd $reponame\n  npm install\n  code .</code></pre></div>\n<p>Use this script or create your own, and follow these steps to set up the custom command:</p>\n<ul>\n<li>Navigate to usr/local/bin -> <code class=\"language-text\">cd ~/../../usr/local/bin</code></li>\n<li>Run <code class=\"language-text\">vim clone</code>\n<ul>\n<li><em>Paste the script</em></li>\n</ul>\n</li>\n<li>Save the file:\n<ul>\n<li>*press ‘ESC’</li>\n<li>*press ‘SHIFT’ + ‘:’</li>\n<li>*type ‘wq’ + ENTER</li>\n</ul>\n</li>\n<li>Create an executable\n<ul>\n<li><code class=\"language-text\">chmod +x clone</code></li>\n</ul>\n</li>\n<li>Run the command!\n<ul>\n<li><code class=\"language-text\">clone https://github.com/spencerlepine/manyshiba-bot.git</code></li>\n</ul>\n</li>\n</ul>\n<p>Viola! This script will accept one command line argument of the destination repo URL. It will automatically open the new project in VSCode in one command.</p>\n<p>Also find me here:</p>\n<ul>\n<li><a href=\"@spencerlepine\">Twitter</a></li>\n<li><a href=\"@spencerlepine\">GitHub</a></li>\n<li><a href=\"https://www.linkedin.com/in/spencer-lepine/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LinkedIn</a></li>\n<li><a href=\"https://www.youtube.com/channel/UCBL6vAHJZqUlyJp-rcFU55Q\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Youtube</a></li>\n</ul>","frontmatter":{"title":"Creating Custom Git Commands","description":"Creating custom Git commands to help automate git worklow.","date":"2021-08-16T00:00:00.000Z","slug":"/blog/creating-custom-git-commands","tags":["Git","Scripts","Terminal","Commands","GitHub"]}}},"pageContext":{}},"staticQueryHashes":["1033552414","1994492073","2404907192","604461682"]}