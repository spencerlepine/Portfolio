name: Docker CI

on:
  schedule:
    # Runs “At 00:00 on Sunday.” (see https://crontab.guru)
    - cron: 0 0 * * 0

jobs:

  docker_ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node: ['18']
        os: [ubuntu-latest]

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    steps:
      - name: ♻️ Check out Git Repository
        uses: actions/checkout@v2

      - name: 🔖  Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: "⚙️ Get Yarn Cache Directory Path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: "⚡️ Cache Dependencies"
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: "📦 Install Dependencies"
        # if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn run build

      - name: 🏗 Build
        run: docker-compose build